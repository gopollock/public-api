syntax = "proto3";

package classtime.service.common;

option java_multiple_files = true;
option java_outer_classname = "CommonMessagesProto";
option java_package = "classtime.service.common";

enum FeedbackMode {
  reserved 2;
  MANUAL = 0;
  PER_QUESTION = 1;
}

enum GameStatus {
  NONE = 0;
  SETUP = 1;
  STARTED = 2;
  FINISHED = 3;
}

enum PusherCluster {
  EU = 0;
  US = 1;
  SOKETI = 2;
}

message Team {
  int32 id = 1;
  repeated string members = 2;
}

// Make sure always sync with getAcquisitionChannel implementation.
message AcquisitionChannel {
  string utm_source = 1;
  string utm_medium = 2;
  oneof channel {
    string referrer = 3;
    string utm_campaign = 4;
    string gclid = 5;
    string gclsrc = 6;
    string fbclid = 7;
  }
  string landing_page = 8;
}

message SebConfig {
  message UrlFilter {
    string url = 1;
    bool are_allowed_subpaths = 2;
  }
  string start_url = 1;
  string start_password = 2;
  string quit_password = 3;
  string admin_password = 4;
  repeated UrlFilter url_filters = 5;
  bool is_manual = 6;
  bool is_enabled = 7;
  bool seb_file_has_been_downloaded = 8;
}

message FeatureFlag {
  string flag_name = 1;
  oneof flag_value {
    bool boolean_value = 2;
    string string_value = 3;
    int32 number_value = 4;
  }
}

message GradingPoint {
  int32 points_centis = 1; // Points multiplied by a factor 100
}

message GradedGap {
  string answer_id = 1;
  int32 gap_index = 2;
  bool is_correct = 3;
}

message QuestionTag {
  string id = 1;
  string name = 2;
  string description = 3;
  string url = 4;
}

message CollaboratorInfo {
  reserved 2;
  string collaborator_id = 1; // classtime_id
  string email = 3;
}

message PlaylistEntry {
  string question_set_id = 1;
  // Question ids to include or empty to include all questions from the question set.
  repeated string selected_question_ids = 2;
}

enum Theme {
  THEME_UNSPECIFIED = 0;
  THEME_BAYERN = 1;
  THEME_CLASSTIME = 2;
  THEME_MONEYPARK = 3;
  THEME_WINGS = 4;
  THEME_KANTONALE = 5;
  THEME_ZKB = 6;
  THEME_DIDAC = 7;
  THEME_UBO = 8;
  THEME_SACKMANN = 9;
  THEME_EMMENTAL = 10;
  THEME_EMMENTAL_FEEDBACK = 11;
  THEME_ECODRIVE = 12;
  THEME_ECODRIVE_FEEDBACK = 13;
  THEME_ECODRIVE_FEEDBACK_20_DE = 14;
  THEME_ECODRIVE_FEEDBACK_20_FR = 15;
  THEME_ECODRIVE_FEEDBACK_20_IT = 16;
  THEME_ECODRIVE_FEEDBACK_12_DE = 17;
  THEME_ECODRIVE_FEEDBACK_12_FR = 18;
  THEME_ECODRIVE_FEEDBACK_12_IT = 19;
  THEME_ECODRIVE_COOP_SESSION_DE = 20;
  THEME_ECODRIVE_COOP_SESSION_IT = 21;
  THEME_ECODRIVE_COOP_SESSION_FR = 22;
  THEME_KANTISARGANS = 23;
  THEME_KANTIWATTWIL = 24;
  THEME_LEXMEA = 25;
  THEME_ECODRIVE_PARTNER = 26;
  THEME_ECODRIVE_PARTNER_FR = 27;
  THEME_ECODRIVE_PARTNER_IT = 28;
}

message SchoolInfo {
  reserved 3;

  string id = 1;
  string title = 2;
  // TODO(https://app.asana.com/1/29774015570538/project/1200624621639592/task/1210844454987421?focus=true): will be deprecated soon
  enum DataRealm {
    eu = 0;
    us = 1;
  }
  DataRealm data_realm = 4;
}
