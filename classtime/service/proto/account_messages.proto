syntax = "proto3";

package classtime.service.account;

import "account_entities.proto";
import "common_messages.proto";
import "common_role.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "AccountMessagesProto";
option java_package = "classtime.service.account";

message OpenIdConnectLoginInfo {
  // Additional params to forward in opendId connect auth request.
  // All params you pass here, should be whitelisted in OAuthOptions.legitExtraParams due to security concerns.
  map<string, string> extra_params = 1;
}

enum AuthTokenSource {
  COOKIE = 0;
  URL_PARAM = 1;
}

message LoginRequest {
  reserved 2;
  AuthenticationProvider provider = 1;
  string extended_account_id = 3;
  classtime.service.common.Role role = 4;
  /*
   * Redirect url, where user will land after authentication process succeeds.
   * Must use the same protocol and host as classtime server.
   */
  string success_redirect_url = 5;
  /* Narrows token audience. Value is added as postfix to a token role's audience. */
  string audience_permission = 6;
  /* Defines where client will expect to find a token. */
  AuthTokenSource token_source = 8;
  string referral_id = 9;
  classtime.service.common.AcquisitionChannel acquisition_channel = 10;
  string referral_info = 11;
  oneof login_info {
    OpenIdConnectLoginInfo open_id_connect = 7;
  }
}

message LoginState {
  reserved 2, 3, 4, 6, 7, 8;
  bytes csrf_token_hash = 1;
  AccountExtensionState account_extension = 5;
  LoginRequest login_request = 9;
}

message LoginResponse {
  // If set, the client should redirect the browser to the given url.
  string redirect_url = 1;

  // If set, the client should pass along the state in the subsequent AuthorizationRequest.
  LoginState login_state = 2;
}

message OpenIdConnectAuthInfo {
  reserved 2;
  string code = 1;
  repeated string scope = 3;
}

message EmailPasswordAuthInfo {
  reserved 3;
  string email = 1;
  bytes password_hash = 2;
  // Reference to EmailLinkVerification entity.
  string email_link_secret_id = 5;
  //  Email verification secret query parameter.
  string token = 4;
}

message EmailVerificationAuthInfo {
  oneof aim {
    string send_to_email = 1;
    string email_link_verification_id = 2;
  }
  string token = 3;
}

message TeamsUserAuthInfo {
  string email = 1;
  string first_name = 2;
  string last_name = 3;
  string ms_access_token = 4;
  string subject = 5;
}

enum SamlBinding {
  POST = 0;
  GET = 1;
}

message SamlAuthInfo {
  string saml_deflate_base64_response = 1;
  SamlBinding binding = 2;
}

message MsTeamsAuthInfo {
  // token that was created by MS Teams JS SDK
  string auth_token = 1;
  // id of a tenant in MS Azure Active Directory
  string aad_tenant_id = 2;
}

message ExamCenterAuthInfo {
  string student_id = 1;
}

message AuthorizationRequest {
  reserved 1;
  LoginState login_state = 4;
  oneof auth_info {
    EmailPasswordAuthInfo email_password = 2;
    OpenIdConnectAuthInfo open_id_connect = 3;
    TeamsUserAuthInfo teams_user = 5;
    SamlAuthInfo saml_response = 6;
    string nickname = 7;
    EmailVerificationAuthInfo email_verification_auth_info = 8;
    MsTeamsAuthInfo ms_teams = 9;
    ExamCenterAuthInfo exam_center_auth_info = 10;
  }
}

message AuthorizationResponse {
  reserved 2;
  string redirect_url = 1;
}

message AccountInfoRequest {}

message AuthenticationInfo {
  int32 authentication_id = 4;
  AuthenticationProvider provider = 2;
  string email = 3;
}

message AccountInfoResponse {
  reserved 1;
  reserved 8;
  string classtime_id = 12;
  UserProfile user_profile = 2;
  int32 primary_authentication_id = 9;
  repeated AuthenticationInfo authentication_infos = 4;
  google.protobuf.Timestamp token_expiration = 5; // Read from cookie that the user sends to us.
  google.protobuf.Timestamp token_creation = 10;
  google.protobuf.Duration remaining_token_lifetime = 11;
  bool is_logged_in = 6;
  classtime.service.common.Role role = 7;
  repeated string organizations = 13;
}

message ChangeProfileNames {
  string first_name = 1;
  string last_name = 2;
}

message UpdateAccountInfoRequest {
  reserved 1;

  oneof update {
    // If set, the given AID will be removed from the account.
    // Returns error, if trying to remove primary AID.
    int32 removed_authentication_id = 2;

    // If set, request to change the primary AID.
    int32 primary_authentication_id = 3;

    // If set, switches account isNew flag to a new value.
    bool change_is_new = 4;

    // If set, requires both first and last name and sets them in profile.
    ChangeProfileNames change_names = 5;
  }
}

message UpdateAccountRequest {
  string account_id = 1;
  oneof update {
    // If set, requires both first and last name and sets them in profile.
    ChangeProfileNames change_names = 2;
  }
}

message UpdateAccountResponse {
  Account account = 1;
}

message RefreshTokenRequest {}
message RefreshTokenResponse {
  google.protobuf.Timestamp token_creation = 1;
  google.protobuf.Timestamp token_expiration = 2;
  google.protobuf.Duration remaining_token_lifetime = 3;
  string header_token = 4;
}

message LogoutRequest {}
message LogoutResponse {}

message AccountExtension {
  reserved 1;
  /* Id of account that requested an extension. */
  string account_id = 5;
  /*
   * Source of authentication details without direct connection to some user account.
   * Its id fields is unreliable.
   */
  AuthenticationMethod authentication_method = 2;
  string account_extension_secret = 3;
  google.protobuf.Timestamp expiration_date = 4;
}

message AccountExtensionRequest {
  reserved 1;
  /* Indicates relation to a pending AccountExtension entity. */
  string extension_id = 2;
}
message AccountExtensionResponse {}

message ResetPasswordRequest {
  reserved 3;
  string email = 1;
  classtime.service.common.Role role = 5;
  /* ResetPassword endpoint is used both for reset password operation and signup. */
  bool is_signup = 2;
  /* If set, asks to extend the account with given id. Only valid for sign ups. */
  string extended_account_id = 4;
}
message ResetPasswordResponse {
  string redirect_url = 1;
}

message CreateTokenRequest {
  reserved 2;
  string classtime_id = 1;
  string permission = 3;
}

message CreateTokenResponse {
  string token = 1;
  google.protobuf.Timestamp valid_until = 2;
}

message GetPrivateAccountDataRequest {
  string account_id = 1;
}

message GetPrivateAccountDataResponse {
  Account account = 1;
}

message GetAccountProfileRequest {
  string account_id = 1;
}

message GetAccountProfileResponse {
  AccountProfile account_profile = 1;
}

message GetAccountProfilesRequest {
  repeated string account_ids = 1;
}

message GetAccountProfilesResponse {
  map<string, AccountProfile> account_profiles = 1;
}

message CreateExternalAccountRequest {
  reserved 4;
  classtime.service.common.Role role = 1;
  UserProfile user_profile = 2;
  // Unique identifier for the user in the given provider.
  string subject = 3;
  // This must only be provided for internal Classtime request
  string organisation = 5;
  string email = 6;
}

message CreateExternalAccountResponse {
  string account_id = 1;
}

message GetAccountIdByEmailRequest {
  string email = 1;
  classtime.service.common.Role role = 2;
}

message GetAccountIdByEmailResponse {
  string account_id = 1;
}

message CreateAccountRequest {
  Account account = 1;
}

message CreateAccountResponse {
  string account_id = 1;
}

message GetOrCreateAccountsRequest {
  message AccountDetails {
    string email = 1;
    classtime.service.common.Role role = 2;
    AuthenticationProvider provider = 3;
    string subject = 4;
    string first_name = 5;
    string last_name = 6;
  }

  repeated AccountDetails accounts_details = 1;
}

message GetOrCreateAccountsResponse {
  message AccountInfo {
    string account_id = 1;
    AccountProfile account_profile = 2;
  }

  // Map of account email to AccountInfo
  map<string, AccountInfo> account_infos = 1;
}
