syntax = "proto3";

package classtime.service.session.api;

import "common_messages.proto";
import "common_role.proto";
import "entity_store_messages.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "question_entities.proto";
import "texttospeech_messages.proto";

option java_multiple_files = true;
option java_outer_classname = "SessionEntitiesProto";
option java_package = "classtime.service.session.api";

enum ResultsSharingMode {
  OFF = 0;
  ON = 1;
  PER_QUESTION = 2;
}

enum ReportType {
  reserved 5;
  SESSION_INSIGHTS = 0; // SessionExportInsightsView
  PARTICIPANT_INSIGHTS = 1; // SessionExportParticipantInsightsView, SessionPdfExportView for student
  PARTICIPANTS_INSIGHTS_ZIP = 2; // SessionExportParticipantsInsightsZipView
  PARTICIPANTS_INSIGHTS_PDF = 3; // SessionExportParticipantsInsightsPDFView
  INSIGHTS_XLSX = 4; // SessionExportXlsxView
}

message ResultsSharingSettings {
  enum ResultsType {
    NUMERIC_GRADE = 0;
    LETTER_GRADE = 1;
    TEXT_DESCRIPTOR = 2;
    POINTS = 3;
    PERCENTAGE = 4;
  }

  ResultsSharingMode question_validation = 1;
  ResultsSharingMode solution_with_explanation = 2;
  ResultsSharingMode answer_comment = 3;
  ResultsSharingMode total_score = 4;
  ResultsSharingMode session_comment = 5;
  ResultsSharingMode pdf_export = 6;
  repeated ResultsType selected_results_types = 7;
}

message GradingScaleEntry {
  classtime.service.common.GradingPoint points_needed = 1;
  string numeric_grade = 2;
  string letter_grade = 3;
  string text_descriptor = 4;
}

message GradingScaleConfig {
  GradingScaleKind grading_scale_kind = 1;
  Granularity granularity_mode = 2;
  repeated GradeType selected_grade_types = 3;
  repeated GradingScaleEntry grading_scale_entries = 4;
}

// (-- api-linter: core::0142::time-field-type=disabled
//     We need to do this because timer and paused_seconds are not timestamps. --)
message SessionSettings {
  reserved 2, 19, 22;
  enum EvaluationMode {
    FULL_OR_NO_POINTS = 0; // was: is_partial_grading = False
    PARTIAL_POINTS_WITH_PENALTY = 1; // was: partial_evaluation_mode = 'with-penalty'
    PARTIAL_POINTS_WITHOUT_PENALTY = 2; //was: partial_evaluation_mode='without-penalty'
  }

  enum TimerStartMode {
    NONE = 0;
    ON_LOGIN = 1;
    CENTRAL = 2;
  }

  enum EvaluationSchema {
    LEGACY = 0;
    DEFAULT = 1;
  }

  string title = 1;
  bool is_active = 3;
  bool is_revealed_deprecated = 4 [deprecated = true];
  bool invited_students_only = 5;
  classtime.service.common.FeedbackMode feedback_mode_deprecated = 6 [deprecated = true];
  bool one_attempt_only = 7; // is_one_attempt
  bool shuffle_choices = 8; // is_shuffle_choices
  bool shuffle_questions = 9; // is_shuffle_questions
  EvaluationMode evaluation_mode = 10; // partial_evaluation_mode
  bool is_configured = 11;
  bool has_reflection = 12;
  bool force_reflection = 13;
  google.protobuf.Duration timer = 14;
  google.protobuf.Timestamp opens_at = 15;
  google.protobuf.Timestamp closed_at = 16;
  // TODO (https://app.asana.com/0/1177833412654353/1209893107411925/f) replace with Challenge message
  string challenge_slug = 17;
  string challenge_kind = 18;
  repeated classtime.entity.EntityRef active_questions = 20; // References 'Question'.
  classtime.service.common.SebConfig seb_config = 21;
  bool is_relogin_approval_required = 23;
  bool is_logout_on_marked_as_done_enabled = 24;
  classtime.service.texttospeech.TextToSpeechConfig default_text_to_speech_config = 25;
  bool is_chat_enabled_by_default = 26;
  TimerStartMode timer_start_mode = 27;
  google.protobuf.Timestamp timer_started_at = 28;
  google.protobuf.Timestamp paused_at = 29;
  google.protobuf.Duration paused_seconds = 30;
  // Temp field, for migration purpose only, to be removed after migration
  bool is_frozen = 31;
  ResultsSharingSettings results_sharing_settings = 32;
  bool is_session_info_hidden = 33;
  EvaluationSchema evaluation_schema = 34;
  google.protobuf.Timestamp ended_at = 35;
  GradingScaleConfig grading_scale_config = 36;
}

enum SessionType {
  DEFAULT_SESSION = 0;
  ANONYMOUS_SOLO_SESSION = 1;
  AUTHORIZED_SOLO_SESSION = 2;
}

// Root Entity
message Session {
  reserved 6, 10, 11, 12, 13;

  classtime.entity.EntityRef owner_ref = 1; // ID of teacher / publisher Account that owns the Session.
  string code = 2;
  classtime.entity.EntityRef label_ref = 3; // Replacement for SessionGroup
  SessionSettings settings = 4;
  repeated classtime.service.question.api.QuestionGroup question_groups = 5;
  classtime.entity.EntityRef invited_class_ref = 7; // ID reference to Django Model 'Class'
  string google_classroom_assignment_ref = 8;
  bool is_onboarding = 9;
  classtime.service.common.PusherCluster pusher_cluster = 14;
  classtime.service.common.GameStatus game_status = 15;
  repeated classtime.entity.EntityRef reflection_questions = 16; // References ReflectionQuestion to order them.
  google.protobuf.Timestamp created = 17; // TODO Remove when creation and modification timestamps are implemented
  string teacher_chat_id = 18;
  classtime.entity.EntityRef question_bank_ref = 19;
  // The highest threshold of joined session participants reached.
  // This is used to send session 'activation' events to mixpanel for a specific set of thresholds.
  int32 activated_count = 20;
  SessionType session_type = 21;
}

// TODO(https://app.asana.com/0/1206655504022453/1207918188241831): Used in JSON communication through pusher.
// (-- api-linter: core::0126::upper-snake-values=disabled --)
enum SessionParticipantAuthProvider {
  Google = 0;
  Microsoft = 1;
  Clever = 2;
  Unknown = 3;
}

enum RequestStatus {
  NOT_REQUESTED = 0;
  REQUESTED = 1;
  DENIED = 2;
}

// TODO(https://app.asana.com/0/1206655504022453/1207918188241831): Used in JSON communication through pusher.
// (-- api-linter: core::0126::upper-snake-values=disabled --)
enum ChatOverride {
  OverrideNone = 0;
  OverrideEnabled = 1;
  OverrideDisabled = 2;
}

// Entity nested in Session
message SessionParticipant {
  reserved 1, 16, 19;
  string name = 2;
  repeated classtime.entity.EntityRef visited_questions = 3; // References SessionQuestion
  google.protobuf.Timestamp started_at = 4;
  string team_id = 5; // team
  bool is_chat_enabled = 6;
  string django_uuid = 7;
  // Only set when Session timer mode is OnLogin and the participant has started the session.
  google.protobuf.Duration time_since_start = 8; // millisecondsSinceStarted
  // TODO(https://app.asana.com/0/0/1206263052530138/f): Use isArchived from entity status instead
  bool is_archived = 9;
  string email = 10;
  string chat_partner_id = 11;
  SessionParticipantAuthProvider provider = 12;
  string conversation_id = 13;
  string sid = 14;
  RequestStatus relogin_request_status = 15;
  bool is_chat_allowed = 17;
  classtime.service.texttospeech.TextToSpeechConfig text_to_speech_config = 18;
  bool is_unsubmit_session_requested = 20;
  RequestStatus rejoin_request_status = 21;
  // (-- api-linter: core::0142::time-field-type=disabled --)
  google.protobuf.Duration timer = 22;
  // (-- api-linter: core::0142::time-field-type=disabled --)
  google.protobuf.Duration paused_seconds = 23;
  google.protobuf.Timestamp handed_in_at = 24;
  ChatOverride chat_override = 25;
  classtime.entity.EntityRef account_ref = 26;
  bool is_screen_locked = 27;
  bool is_verified = 28;
  bool is_restarted = 29;
  // The time when the participant has joined the session for the first time.
  // Unset for participants that were invited to a session but have not joined yet.
  google.protobuf.Timestamp joined_at = 31;

  // Temp fields only for migration purpose.
  google.protobuf.Timestamp django_created_at = 30;
  repeated classtime.service.question.api.DraftAnswer draft_answers = 100;
}

enum ReflectionQuestionKind {
  EMOJI = 0;
  YES_NO = 1;
}

enum ReflectionQuestionAnswer {
  YES = 0;
  NO = 1;
  NEUTRAL = 2;
  UPSET = 3;
  HAPPY = 4;
}

// Entity nested under SessionParticipant
message ReflectionAnswer {
  classtime.entity.EntityRef question_ref = 1;
  ReflectionQuestionAnswer value = 2;
  // Temp field, for migration purpose only, to be removed after migration
  google.protobuf.Timestamp django_created_at = 3;
}

message ReflectionQuestion {
  // Temp message, for migration purpose only, to be removed after migration
  message ReflectionAnswerData {
    string participant_django_id = 1;
    google.protobuf.Timestamp created_at = 2;
    ReflectionQuestionAnswer value = 3;
  }

  reserved 1;
  // TODO(https://app.asana.com/0/1203796373635132/1207898854551222/f): remove title after fully migrated to the new API
  string title = 2;
  ReflectionQuestionKind kind = 3;
  string message_id = 4;
  repeated ReflectionAnswerData reflection_answers = 5;
  int32 order = 100; // Temporary field for migration purpose.
  string reflection_question_id = 101; // Temporary field for migration purpose.
}

message InvitedClass {
  string id = 1;
  string title = 2;
  string subject = 3;
}

message SessionLabel {
  classtime.entity.EntityRef owner_ref = 1;
  string title = 2;
}

// entity
message AnswerEmbeddingUsage {
  classtime.entity.EntityRef account_ref = 1;
  int32 count = 2;
  google.protobuf.Timestamp last_reset = 3;
}

// Entity nested under SessionParticipant
message Comment {
  enum State {
    DRAFT = 0;
    SAVED = 1;
  }

  State state = 1;
  string content = 2;
  classtime.entity.EntityRef question_ref = 3; // if not empty, it is a question comment
  classtime.entity.EntityRef answer_ref = 4; // must also be set if question_ref is set. Used to filter latest comments to latest answers.
  string ai_generated_content = 5;
}

message CommentTemplate {
  string title = 1;
  string content = 2;
  classtime.entity.EntityRef account_ref = 3;
}

message SessionExport {
  reserved 7;
  ReportType type = 1;
  string export_link = 2;
  classtime.entity.EntityRef session_participant = 3;
  string locale = 4;
  string auth_token = 5;
  string email = 6;
  classtime.entity.EntityRef account = 8;
  string client_time_zone = 9;
}

enum GradingScaleKind {
  GRADING_SCALE_UNSPECIFIED = 0;
  GRADING_SCALE_UKRAINIAN = 1;
  GRADING_SCALE_SWISS = 2;
  GRADING_SCALE_GERMAN = 3;
  GRADING_SCALE_THAILAND = 4;
  GRADING_SCALE_US_ACADEMIC = 5;
}

enum Granularity {
  GRANULARITY_UNSPECIFIED = 0;
  GRANULARITY_WHOLE = 1;
  GRANULARITY_HALF = 2;
  GRANULARITY_QUATER = 3;
  GRANULARITY_DECIMAL = 4;
}

enum GradeType {
  GRADE_TYPE_NUMERIC = 0;
  GRADE_TYPE_LETTER = 1;
  GRADE_TYPE_DESCRIPTOR = 2;
}
